@model IPagedList<Rolled_metal_products.Models.Product>
@using X.PagedList
@using X.Web.PagedList
@{
    ViewData["Title"] = "Товары";
    int index = 1;
    string currentSearch = ViewData["CurrentFilter"] as string;
    string currentSort = ViewData["CurrentSort"] as string;

    var sortDescriptions = new Dictionary<string, string>
    {
        { "name", "Название (по возрастанию)" },
        { "name_desc", "Название (по убыванию)" },
        { "category", "По категории" },
        { "date", "По дате добавления (по возрастанию)" },
        { "date_desc", "По дате добавления (по убыванию)" },
        { "", "По дате добавления (по убыванию)" }
    };
}

<style>
    .mod-btn {
        padding: 12px 22px 12px 22px;
    }
</style>

<style>
    .pagination li a {
        padding: 10px;
        box-shadow: 0 .5rem 1rem rgba(55, 99, 244, .15) !important;
        border-radius: 10px;
        margin-right: 5px;
        color: #0366d6;
        cursor: pointer;
    }

    .pagination li span {
        color: white;
        background: #0366d6;
        padding: 10px;
        box-shadow: 0 .5rem 1rem rgba(55, 99, 244, .15) !important;
        border-radius: 10px;
        margin-right: 5px;
        cursor: pointer;
    }
</style>


<div class="container p-3" style="min-height: 650px;">
    <div class="row">
        <div class="col-6">
            <h2 class="text-primary fw-bold">Товары</h2>
        </div>
    </div>

    <div class="row pt-4">
        <div class="col-md-8 mb-3">
            <form asp-action="Index" method="get">
                <div class="input-group">
                    <input type="text" class="form-control" name="searchString" value="@currentSearch" placeholder="Поиск товаров..." />
                    <button class="btn btn-primary" type="submit" style="border-radius: 1rem; border-top-left-radius: 0px; border-bottom-left-radius: 0px;">Найти</button>
                </div>
            </form>
        </div>
        <div class="col-md-4 text-end">
            <form asp-action="Index" method="get">
                <input type="hidden" name="searchString" value="@currentSearch" />
                <select class="form-select" name="sortOrder" onchange="this.form.submit()">
                    <option value="date_desc" selected="@(currentSort == "date_desc")">Сортировать по дате (убыв.)</option>
                    <option value="date" selected="@(currentSort == "date")">Сортировать по дате</option>
                    <option value="name" selected="@(currentSort == "name")">Сортировать по названию</option>
                    <option value="name_desc" selected="@(currentSort == "name_desc")">Сортировать по названию (убыв.)</option>
                    <option value="category" selected="@(currentSort == "category")">Категории</option>
                </select>
            </form>
        </div>
    </div>

    @if (!String.IsNullOrEmpty(currentSearch) || !String.IsNullOrEmpty(currentSort))
    {

        <div class="row pt-4">
            <div class="col-12 d-flex flex-wrap">
                @if (!String.IsNullOrEmpty(currentSearch))
                {
                    <div class="alert alert-info me-2 mb-2 mb-md-0" style="max-width: fit-content;">
                        <span>@currentSearch <a href="@Url.Action("Index", new { searchString = "", sortOrder = currentSort })" class="text-danger">&times;</a></span>
                    </div>
                }
                @if (!String.IsNullOrEmpty(currentSort))
                {
                    var currentSortDescription = sortDescriptions.ContainsKey(currentSort) ? sortDescriptions[currentSort] : currentSort;

                    <div class="alert alert-info mb-2 mb-md-0" style="max-width: fit-content;">
                        <span>@currentSortDescription <a href="@Url.Action("Index", new { searchString = currentSearch, sortOrder = "" })" class="text-danger">&times;</a></span>
                    </div>
                }
            </div>
        </div>
    }

    </br>
    @if (Model.Count() > 0)
    {
        <div class="table-responsive shadow">
            <table class="table table-borderless table-striped table-hover table-reflow" style="margin-bottom: 0px;">
                <thead class="table-dark">
                    <tr>
                        <th scope="col" style="text-align:center">#</th>
                        <th>
                            Название
                        </th>
                        <th>
                            Категория
                        </th>
                        <th>
                            Цена
                        </th>
                        <th>
                            Старая цена
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <th scope="row" style="text-align:center" width="5%">@index</th>
                            <td width="25%">@item.Name</td>
                            <td width="25%">@item.Category.Name</td>
                            <td width="10%">@item.Price ₽</td>
                            <td width="15%">@item.OldPrice ₽</td>
                            <td class="text-center">
                                <div class="btn-group">
                                    <a class="btn btn-primary mx-2 mod-btn" asp-action="Edit" asp-controller="Product" asp-route-id="@item.Id" data-bs-toggle="tooltip" data-bs-placement="top" title="Редактировать категорию">
                                        <i class="fa-solid fa-pen-to-square"></i>
                                    </a>
                                    <a class="btn btn-danger mx-2 mod-btn" asp-action="Delete" asp-controller="Product" asp-route-id="@item.Id" data-bs-toggle="tooltip" data-bs-placement="top" title="Удалить категорию">
                                        <i class="fa-solid fa-trash"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                        index++;
                    }
                </tbody>
            </table>
        </div>
        <div class="text-center mt-4">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchString = currentSearch, sortOrder = currentSort }), PagedListRenderOptions.ClassicPlusFirstAndLast)
        </div>
    }
    else
    {
        <p> Товаров нет.</p>
    }
</div>