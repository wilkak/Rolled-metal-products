@model Rolled_metal_products.Models.ViewModels.CategoryProductsVM
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "CategoryProducts";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .btn-create {
        text-align: center;
        line-height: 30px;
    }

    li {
        list-style-type: none;
    }

    ul {
        margin-left: 0;
        padding-left: 0;
    }

    .btn-transparent {
        padding: 0;
        box-shadow: none !important;
    }

    .btn-create {
        margin-bottom: 1rem;
    }

    .btn-secondary {
        padding: 0.375rem 0.75rem;
        font-size: 0.875rem;
    }

    .custom-link {
        color: inherit;
        text-decoration: none;
    }

        .custom-link:hover {
            color: inherit;
            text-decoration: none;
        }

    .sidebar-parent-category {
        font-size: 16px;
    }

    .sidebar-child-category {
        font-size: 14px;
    }

    .main-parent-category {
        font-size: 16px;
    }

    .main-child-category {
        font-size: 14px;
    }

    .list-group-item {
        border: none;
    }

    .list-group-item {
        padding-top: 0.25rem;
        padding-bottom: 0.25rem;
        font-size: 14px;
    }

</style>

<div class="container mt-4">
    <div class="row">
        <div class="col-md-3">
            <div class="card" style="border:none">
                <div class="card-body">
                    <ul class="list-group">
                        @foreach (var parameter in Model.CategoryParameters)
                        {
                            <li class="list-group-item">
                                <div class="row">
                                    <div class="col-10" style="font-size: 20px;font-weight: 700 !important;">
                                        @parameter.Key
                                    </div>
                                    <div class="col-2 text-end">
                                        <button class="btn btn-transparent" type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample_@parameter.Key" aria-expanded="false" aria-controls="collapseExample_@parameter.Key">
                                            <i class="fa-solid fa-chevron-down"></i>
                                        </button>
                                    </div>
                                </div>

                                <div class="collapse show" id="collapseExample_@parameter.Key">
                                    <ul class="list-group list-group-flush">
                                        @foreach (var value in parameter.Value)
                                        {
                                            <li>
                                                <div class="form-check" style="padding: 1em 1.5em 1em 1.5em;font-size: 15px;">
                                                    <input type="checkbox" class="form-check-input parameter-checkbox" data-parameter="@parameter.Key" value="@value" id="@parameter.Key-@value" />
                                                    <label class="form-check-label" for="@parameter.Key-@value">@value</label>
                                                </div>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            </li>
                        }
                    </ul>


                </div>
            </div>
        </div>

        <div class="col-md-9">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a asp-controller="Home" asp-action="Index" style="color:#1b6ec2;">Главная</a>
                    </li>
                    <li class="breadcrumb-item">
                        <a asp-controller="Catalog" asp-action="Index" style="color:#1b6ec2;">Категории</a>
                    </li>
                    @foreach (var category in Model.BreadcrumbCategories)
                    {
                        if (category == Model.BreadcrumbCategories.Last())
                        {
                            <li class="breadcrumb-item active" aria-current="page">@category.Name</li>
                        }
                        else
                        {
                            <li class="breadcrumb-item">
                                <a asp-route-parentId="@category.Id" asp-controller="Catalog" asp-action="Index" style="color:#1b6ec2;">@category.Name</a>
                            </li>
                        }
                    }
                </ol>
            </nav>
            <h2 style="font-weight: 700 !important;">@Model.Category.Name</h2>
            <div class="mt-4" id="products-list-container" class="row">
                <partial name="_IndividualProductCard" model="@Model.Products" />
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        document.querySelectorAll('.parameter-checkbox').forEach(checkbox => {
            checkbox.addEventListener('change', function () {
                filterProducts();
            });
        });

        function filterProducts() {
            const selectedParameters = {};
            document.querySelectorAll('.parameter-checkbox:checked').forEach(checkbox => {
                const parameter = checkbox.getAttribute('data-parameter');
                const value = checkbox.value;
                if (!selectedParameters[parameter]) {
                    selectedParameters[parameter] = [];
                }
                selectedParameters[parameter].push(value);
            });

            $.ajax({
                url: '@Url.Action("FilterProducts", "Catalog")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(selectedParameters),
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (data) {
                    $('#products-list-container').html(data);
                },
                error: function (xhr, status, error) {
                    console.error("Ошибка при запросе:", status, error);
                }
            });

        }
    </script>
    <script>
        function updateCartCount() {
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetCartItemCount", "Cart")',
                success: function (response) {
                    $("#cart-count").text(response.count);
                },
                error: function () {
                    alert("Произошла ошибка при обновлении количества товаров в корзине.");
                }
            });
        }

        $(document).ready(function () {
            $(document).on("click", ".add-to-cart", function () {
                var productId = $(this).data("product-id");
                var button = $(this);
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("AddToCartAjax", "Catalog")',
                    data: { productId: productId },
                    success: function (response) {
                        if (response.success) {
                            button.replaceWith('<button class="btn btn-danger shadow remove-from-cart" data-product-id="' + productId + '" style="width: 100%;border-radius: 10px;"><i class="fa-solid fa-check"></i>  &nbsp; Добавлено</button>');
                            updateCartCount();
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function () {
                        alert("Произошла ошибка при добавлении товара в корзину.");
                    }
                });
            });

            $(document).on("click", ".remove-from-cart", function () {
                var productId = $(this).data("product-id");
                var button = $(this);

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("RemoveFromCartAjax", "Catalog")',
                    data: { productId: productId },
                    success: function (response) {
                        if (response.success) {
                            button.replaceWith('<button class="btn btn-primary shadow add-to-cart" data-product-id="' + productId + '" style="width: 100%;border-radius: 10px;"><i class="fa-solid fa-cart-plus"></i>  &nbsp; Купить</button>');
                            updateCartCount();
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function () {
                        alert("Произошла ошибка при удалении товара из корзины.");
                    }
                });
            });
        });
    </script>
}